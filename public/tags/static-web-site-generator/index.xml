<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Static Web Site Generator on Appernetic.io</title>
    <link>/tags/static-web-site-generator/</link>
    <description>Recent content in Static Web Site Generator on Appernetic.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>support@appernetic.io (Admin)</managingEditor>
    <webMaster>support@appernetic.io (Admin)</webMaster>
    <copyright>(c) 2016 Appernetic.io</copyright>
    <lastBuildDate>Thu, 18 Feb 2016 20:27:25 +0000</lastBuildDate>
    <atom:link href="/tags/static-web-site-generator/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Collaborating and working with hugo themes</title>
      <link>/2016/02/18/collaborating-and-working-with-hugo-themes/</link>
      <pubDate>Thu, 18 Feb 2016 20:27:25 +0000</pubDate>
      <author>support@appernetic.io (Admin)</author>
      <guid>/2016/02/18/collaborating-and-working-with-hugo-themes/</guid>
      <description>

&lt;h2 id=&#34;customizing-themes&#34;&gt;Customizing themes&lt;/h2&gt;

&lt;p&gt;If you just have set up your Appernetic account you need to add a theme. The easiest way is to clone a theme which you can do from the drop down button beside the blue &lt;strong&gt;Preview&lt;/strong&gt; button to the right.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457304135/pig3qgwntchbkk0x9tab&#34; alt=&#34;Install a theme&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can start by cloning my customized &lt;a href=&#34;https://github.com/appernetic/hugo-bootstrap-mod.git&#34;&gt;hugo-bootstrap theme&lt;/a&gt; or get one from &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Then select the theme from the list of themes and click Use Theme. When you do that the theme config settings will be copied to your project folder. Now open the settings tab and change the settings as you would like to have it.&lt;/p&gt;

&lt;p&gt;You can change the bootswatch to another design by changing the theme = &amp;laquo;paper&amp;raquo; under [params].&lt;/p&gt;

&lt;p&gt;Here is the different bootswatch designs you can use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cerulean&lt;/li&gt;
&lt;li&gt;cosmo&lt;/li&gt;
&lt;li&gt;cyborg&lt;/li&gt;
&lt;li&gt;darkly&lt;/li&gt;
&lt;li&gt;default&lt;/li&gt;
&lt;li&gt;flatly&lt;/li&gt;
&lt;li&gt;journal&lt;/li&gt;
&lt;li&gt;lumen&lt;/li&gt;
&lt;li&gt;paper&lt;/li&gt;
&lt;li&gt;readable&lt;/li&gt;
&lt;li&gt;sandstone&lt;/li&gt;
&lt;li&gt;simplex&lt;/li&gt;
&lt;li&gt;slate&lt;/li&gt;
&lt;li&gt;spacelab&lt;/li&gt;
&lt;li&gt;superhero&lt;/li&gt;
&lt;li&gt;united&lt;/li&gt;
&lt;li&gt;yeti&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is lots of themes at &lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, but you probably want to customize the theme before you use it so that you have a blog with  a theme that is matching your business web site or service. I am using Bootswatch Paper theme for &lt;a href=&#34;https://appernetic.io&#34;&gt;Appernetic service&lt;/a&gt;. Fortunately I found &lt;a href=&#34;https://github.com/mmrath/hugo-bootstrap&#34;&gt;hugo-bootstrap&lt;/a&gt; and cloned it.&lt;/p&gt;

&lt;p&gt;Then to customize it further I pressed the &lt;strong&gt;Sync&lt;/strong&gt; button which does a pull and then a push to your Appernetic project repository at &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; with the name &lt;strong&gt;appernetic-hugo-project&lt;/strong&gt; . When you start out you will not have this repo so it is automatically created for you and all strange git commands i hidden away so you do not have to think about it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When you start out you will not have this repo so it is automatically
created for you and all strange git commands i hidden away so you do
not have to think about it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457304341/htdhjub2yfcw4bpkzklw&#34; alt=&#34;Sync with GitHub&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now to work with the theme I did a pull to my local computer, edited the theme with my favorite editor &lt;em&gt;Atom&lt;/em&gt; and after that I did a commit and a push back to my GitHub project repo. If you are a hard-core git user you would start terminal and add the commands. There is also a very easy to use desktop client for &lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457304455/tdsbe75348lm3dxa1csw&#34; alt=&#34;GitHub Desktop app&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;collaborating&#34;&gt;Collaborating&lt;/h2&gt;

&lt;p&gt;Notice also that I have all the social and collaborating features in GitHub so I can invite a real front end designer to have a look at my attempts to customize the theme. My last step is to do a &lt;strong&gt;Sync&lt;/strong&gt; again in Appernetic and then a &lt;strong&gt;Publish&lt;/strong&gt; and after 10 min all is live on &lt;a href=&#34;https://appernetic.github.io/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Notice also that I have all the social and collaborating features in
GitHub so I can invite a real front end designer to have a look at my
attempts to customize the theme.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;start-blogging&#34;&gt;Start blogging!&lt;/h2&gt;

&lt;p&gt;From now on it is very easy to start blogging. Select the &lt;strong&gt;post&lt;/strong&gt; directory in the tree view, it is where blog post lives. Create a new file,  name it with a headline, it will be sluggified automatically. Select &lt;em&gt;toml&lt;/em&gt; or &lt;em&gt;yaml&lt;/em&gt; front matter (toml as default selection). The file tree will be updated and show the new file. Open the file and blog away! Turn on auto save and all text you write will be saved every other minute. Remember to &lt;strong&gt;undraft&lt;/strong&gt; the post if you would like to see it after publishing and  add key words, tags and topics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457304529/clqxr6v6xhxum0jvqabz&#34; alt=&#34;Start blogging&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Happy blogging!&lt;/p&gt;

&lt;p&gt;Tip, skip the first headline in the post (at least in hugo-bootstrap it will be added automatically) and edit the &lt;em&gt;front matter&lt;/em&gt; located at the bottom of the editor after the preview and switch the first letter in the title to capital.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why use a static web site generator?</title>
      <link>/2016/02/10/why-use-a-static-web-site-generator/</link>
      <pubDate>Wed, 10 Feb 2016 19:50:09 +0000</pubDate>
      <author>support@appernetic.io (Admin)</author>
      <guid>/2016/02/10/why-use-a-static-web-site-generator/</guid>
      <description>

&lt;h2 id=&#34;full-circle:f405389e24819888f4339a200bcc1557&#34;&gt;Full circle&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457306076/y8ylaazm8pet3nwpbffq&#34; alt=&#34;Hugo plus octocat&#34; /&gt;
Today we have come full circle with static site generators. A long time ago at the end of 1994 I built a static web site for the Swedish Tourist Association that contained hundreds of handcrafted html pages, it was quite advanced with a email to fax gateway that sent out bookings to remote mountain stations. Then I found ColdFusion in the beginning of 1995 and the the sites I built had dynamic content served from MS Access databases. Later I started to use mySQL and built my own hosted CMS that was easily updated by non-technical users.&lt;/p&gt;

&lt;h2 id=&#34;the-programmable-web:f405389e24819888f4339a200bcc1557&#34;&gt;The programmable web&lt;/h2&gt;

&lt;p&gt;It was a lot of things to manage, servers, operating systems, security patches, databases, backup and on the application level with different versions and dependencies. Then I moved on to Platform as a Service (PaaS) and I only needed to manage and secure my applications, databases was now managed by a BaaS (backend as a service) and if I needed something specific such as commenting, search, email service or calendar there was always an API to connect to. The programmable web was born.&lt;/p&gt;

&lt;h2 id=&#34;advantage-static-web-site-generators:f405389e24819888f4339a200bcc1557&#34;&gt;Advantage static web site generators&lt;/h2&gt;

&lt;p&gt;Now there is a rich ecosystem of service providers for anything including forms, calendars, content, images, email, e-commerce etc. A dynamic CMS is no longer the best option for a web site. There is really only a need for dynamic web sites if you have a very large site with a complex structure and rich content such as news sites and large enterprises that have content that is updated very frequently. With a static site generator you didnâ€™t really lose anything of practical value. Instead you have several advantages with a static site such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;, static files can be served fast. There is no database or templating layer that slows requests down. A static site will always be the fastest way to deliver content.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt;, static sites do not contain dynamic content, and are therefore immune to most common attacks that dynamic systems like Wordpress and Joomla are plagued with.  Recently 12 million Drupal sites needed emergency patching.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Previewable&lt;/strong&gt;, It is easy to separate preview from the live site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Versioning&lt;/strong&gt;, static-site generators store their content in flat text files. This makes them ideal to be used with version control systems, such as Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Static site generator are getting more popular and a view on Google Trends shows this:
 &lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457306147/xm8rkllrfgr8xlznehix&#34; alt=&#34;Static site generator statistics&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Interest over time. Web Search. Worldwide, 2004 to the present.&lt;/p&gt;

&lt;h2 id=&#34;a-static-site-generator-as-a-service:f405389e24819888f4339a200bcc1557&#34;&gt;A static site generator as a service&lt;/h2&gt;

&lt;p&gt;With Appernetic we are building a static web generator as a service that is easy to use for non-technical users and add some extra value. To start with we have included an easy to use editor, visual tree view, image upload, site preview, continuous integration with GitHub and atomic deploy, auto save and theme cloning.&lt;/p&gt;

&lt;h2 id=&#34;why-github:f405389e24819888f4339a200bcc1557&#34;&gt;Why gitHub?&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;re probably wondering why the heck we are using GitHub. First of all GitHub use git which is a very good versioning system and they have &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; and you can use your own domain name and SSL (probably not the safest, but anyway its SSL!). Even if they only cache pages for 10 minutes and there are more cache misses then hits they have a fast CDN, Fastly.  I did a little unscientific performance test to see how it&amp;rsquo;s really working out. All tests is done with &lt;a href=&#34;http://websitetest.com/&#34;&gt;websitetest.com&lt;/a&gt; from Berlin:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://appernetic.io/#/about&#34;&gt;https://appernetic.io/#/about&lt;/a&gt;, with Cloudflare CDN and SSL, Dynamic site, 4.7 MB, Time to Last Byte: &lt;strong&gt;70 ms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://appernetic.github.io/2016/02/10/firstpost/&#34;&gt;https://appernetic.github.io/2016/02/10/firstpost/&lt;/a&gt;, with Fastly CDN and SSL, Static Blog Site 1.6 Mb, Time to Last Byte: &lt;strong&gt;171 ms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://apple.com&#34;&gt;http://apple.com&lt;/a&gt;, No SSL, Dynamic site, 741 KB, Time to Last Byte: &lt;strong&gt;378 ms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.theguardian.com/uk-news&#34;&gt;http://www.theguardian.com/uk-news&lt;/a&gt;,  No SSL, Dynamic site, 4.3 MB, Time to Last Byte: &lt;strong&gt;484 ms&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@erinleecarr/lessons-dbbaa0c8294d#.h25nipmyq&#34;&gt;https://medium.com/@erinleecarr/lessons-dbbaa0c8294d#.h25nipmyq&lt;/a&gt;, SSL, Dynamic blog, 3.2 MB, Time to Last Byte &lt;strong&gt;492 ms&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;A static site wins every time even if there is a lot of cache misses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We also eat our own dog food and use it for everything possible. Keep your eye on the blog where we will be posting tips and tricks how you can get the best advantage of a static blog or web site.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/appernetic/v1457306218/e3v66ludnvfweghdb91d&#34; alt=&#34;working on computer pexels.com&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We are using Hugo for fast site generation and GitHub for deploy.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>